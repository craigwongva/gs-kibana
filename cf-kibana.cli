# Usage:
#  <thisfile> <stack> <space> <guipassword>
# where stack is like craigkibana8
# where space is int, dev, etc.
# where guipassword is anything like mypassword

export STACK=$1
export SPACE=$2
export GUIPASSWORD=$3
export TMP=/tmp/cli

./elasticsearch.cli $SPACE &> $TMP-0900

#This didn't work, so I created it manually:
# aws iam create-role --role-name gsn-iam-KibanaRole --assume-role-policy-document file://gsn-iam-KibanaRole.json

vpcid=$(aws ec2 describe-vpcs --filter Name=tag:Name,Values="gsn-vpc" --region us-east-1 --query Vpcs[].VpcId --output text) &> $TMP-1000
echo vpcid is $vpcid

subnetid=$(aws ec2 describe-subnets --filters Name=tag:Name,"Values=gsn-vpc: public A" --region us-east-1 --query Subnets[].SubnetId --output text) &> $TMP-1100
echo subnetid is $subnetid

aws ec2 create-security-group --group-name gsn-kibana-$SPACE --vpc-id $vpcid --description "story#11062" --region us-east-1
securitygroupid=$(aws ec2 describe-security-groups --filter Name=group-name,Values=gsn-kibana-$SPACE --region us-east-1 --query SecurityGroups[].GroupId --output text)
echo securitygroupid is $securitygroupid

aws ec2 authorize-security-group-ingress --group-id $securitygroupid --protocol tcp --port 80 --cidr 68.100.234.63/32 --region us-east-1 &> $TMP-1800
echo just opened its 80 to Beck

aws ec2 authorize-security-group-ingress --group-id $securitygroupid --protocol tcp --port 22 --cidr 68.100.234.63/32 --region us-east-1 &> $TMP-1900
echo just opened its 22 to Beck

imageid=ami-b73b63a0 &> $TMP-1400 #Amazon Linux us-east-1
echo imageid is $imageid

aws cloudformation create-stack --stack-name $STACK --template-url https://s3.amazonaws.com/venicegeo-devops-dev-kibana-project/cf-kibana.json --region us-east-1 --parameters ParameterKey=instanceType,ParameterValue=t2.micro ParameterKey=subnetId,ParameterValue=subnet-e387df95 ParameterKey=securityGroupId,ParameterValue=sg-8c4a72f1 ParameterKey=guiPassword,ParameterValue=$GUIPASSWORD ParameterKey=space,ParameterValue=$SPACE
